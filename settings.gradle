/*
 * Copyright (c) Contributors to the Eclipse Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0 
 */

/*
 * Master Gradle initialization script
 *
 * Depends on bnd_* values from gradle.properties.
 */

pluginManagement {
	plugins {
		id "biz.aQute.bnd.workspace" version bnd_version
	}
	repositories {
		maven {
			name = "Bnd Snapshots"
			url = uri(bnd_snapshots)
			mavenContent {
				snapshotsOnly()
			}
		}
		maven {
			name = "Bnd Releases"
			url = uri(bnd_releases)
			mavenContent {
				releasesOnly()
			}
		}
		mavenCentral()
		gradlePluginPortal()
	}
	rootProject.name = "osgi"
	gradle.ext.bndWorkspaceConfigure = { workspace ->
		// In case these are set from the command line...
		workspace.setProperty("bnd_version", bnd_version)
		workspace.setProperty("bnd_snapshots", bnd_snapshots)
		workspace.setProperty("bnd_releases", bnd_releases)
		/*
		 * Compute the build time stamp. 
		 * If the git workspace is clean, the build time is the time of the head commit.
		 * If the git workspace is dirty, the build time is the current time.
		 */
		if ("git diff --no-ext-diff --quiet".execute().waitFor() == 0) {
			workspace.setProperty("_@tstamp", "git show --no-patch --format=%ct000".execute().text.trim())
		} else {
			workspace.setProperty("_@tstamp", Long.toString(System.currentTimeMillis()))
		}
	}
}

plugins {
	id "biz.aQute.bnd.workspace"
}
